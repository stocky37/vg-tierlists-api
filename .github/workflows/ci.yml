name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  APP_NAME: tierlists-api
  REGISTRY: quay.io/gh-stocky37
  REGISTRY_USER: ${{ secrets.QUAY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: gradle

      - name: Unit tests
        run: ./gradlew test

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

  build:
    name: Build & publish image
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.push-registry.outputs.digest }}
    steps:
    - uses: actions/checkout@v3

    - name: Build image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.APP_NAME }}
        tags: latest
        containerfiles: ./Containerfile

    - if: github.ref == 'refs/heads/main'
      id: push-registry
      name: Push image to registry
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}

  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build, test]
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - name: Update application image in Azure
        uses: azure/CLI@v1
        with:
          azcliversion: 2.40.0
          inlineScript: |
            az extension add --name containerapp
            az containerapp update \
              -g "${{ env.RESOURCE_GROUP }}" \
              -n "${{ env.APP_NAME }}" \
              -i "${{ env.REGISTRY }}/${{ env.APP_NAME }}@${{ needs.build.outputs.digest }}"